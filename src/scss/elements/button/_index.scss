/*
-----------------------------------------------------------------------
1.3.    Button
-----------------------------------------------------------------------
*/

@use '../../variables/map' as vars;
@use '../../mixins/color' as color;
@use '../../mixins/button' as button;
@use '../../mixins/shadows' as shadows;

button,
[type='button'],
[type='reset'],
[type='submit'] {
    -webkit-appearance: button;
}

button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
    border-style: none;
    padding: 0;
}

button::-moz-focusring,
[type='button']::-moz-focusring,
[type='reset']::-moz-focusring,
[type='submit']::-moz-focusring {
    outline: 1px dotted ButtonText;
}

.btn {
    font-family: inherit;
    display: inline-block;
    margin: 0;
    text-align: center;
    white-space: nowrap;
    cursor: pointer;
    border-radius: vars.get('button-border-radius');
    border-width: vars.get('button-border-width');
    border-style: solid;
    text-transform: none;
    overflow: visible;

    color: vars.get('button-text-color');
    background-color: vars.get('button-bg-color');
    background-image: vars.get('button-bg-image');
    border-color: vars.get('button-border-color');
    @include shadows.box(vars.get('button-box-shadow'));

    height: vars.get('button-height');
    line-height: vars.get('button-line-height');
    padding: vars.get('button-padding');
    font-size: vars.get('button-font-size');

    /// Different sized buttons
    &.btn-sm {
        @include button.base('sm');
    }

    &.btn-lg {
        @include button.base('lg');
    }

    /// Inverted Buttons
    @include button.variant('inverted');

    /// Context Buttons
    @each $context in color.$contexts {
        @include button.variant($context);
    }

    &:hover {
        text-decoration: none;
        color: vars.get('button-text-color-hover');
        background-color: vars.get('button-bg-color-hover');
        background-image: vars.get('button-bg-image-hover');
        border-color: vars.get('button-border-color-hover');
        @include shadows.box(vars.get('button-box-shadow-hover'));
    }

    &:focus,
    &.active {
        color: vars.get('button-text-color-focus');
        background-color: vars.get('button-bg-color-focus');
        background-image: vars.get('button-bg-image-focus');
        border-color: vars.get('button-border-color-focus');
        @include shadows.box(vars.get('button-box-shadow-focus'));
    }

    &:focus:hover,
    &.active:hover {
        color: vars.get('button-text-color-hover');
        background-color: vars.get('button-bg-color-hover');
        background-image: vars.get('button-bg-image-hover');
    }

    &.disabled,
    &:disabled {
        cursor: auto;
        opacity: 0.6;
        pointer-events: none;
    }
}
