/*
-----------------------------------------------------------------------
Mixin : Color
-----------------------------------------------------------------------
*/

/// Accessible Variables.
@use '../variables/map' as vars;
@use 'sass:string';

/*----------  Helpers  ----------*/

/// Available Contexts
$contexts: 'primary', 'secondary', 'success', 'info', 'warning', 'danger';

/// Converts HEX to RGB list
@function -hex-to-rgb($hex) {
    @return string.unquote(red($hex) + ', ' + green($hex) + ', ' + blue($hex));
}

/*----------  Property Mixins  ----------*/

@mixin text($name, $alpha) {
    color: RGBA(vars.get('#{$name}-rgb'), $alpha);
}

/*----------  Component Mixins  ----------*/

@mixin variable($name, $hex) {
    @include vars.setBase('#{$name}-rgb', -hex-to-rgb($hex));
    @include vars.setBase('#{$name}-color', RGBA(vars.get('#{$name}-rgb'), 1));
}

@mixin system($name, $base, $light, $dark, $text) {
    @include variable($name, $base);
    @include variable($name + '-light', $light);
    @include variable($name + '-dark', $dark);

    @include vars.setBase('#{$name}-box-shadow-color', RGBA(vars.get('#{$name}-rgb'), 0.4));
    @include vars.setBase('#{$name}-box-shadow-color-darker', RGBA(vars.get('#{$name}-rgb'), 0.6));
    @include vars.setBase('#{$name}-text-color', $text);
}

@mixin context($name, $parent) {
    $shades: '', '-light', '-dark';
    $suffixes: 'rgb', 'color';

    @each $shade in $shades {
        @each $suffix in $suffixes {
            @include vars.setBase('#{$name+$shade}-#{$suffix}', vars.get('#{$parent + $shade}-#{$suffix}'));
        }
    }

    @include vars.setBase('#{$name}-box-shadow-color', vars.get('#{$parent}-box-shadow-color'));
    @include vars.setBase('#{$name}-box-shadow-color-darker', vars.get('#{$parent}-box-shadow-color-darker'));
    @include vars.setBase('#{$name}-text-color', vars.get('#{$parent}-text-color'));
}
